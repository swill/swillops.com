<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gh Pages on SwillOps</title>
    <link>http://swillops.com/tags/gh-pages/</link>
    <description>Recent content in Gh Pages on SwillOps</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 22 Jun 2015 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://swillops.com/tags/gh-pages/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Hugo on gh-pages</title>
      <link>http://swillops.com/blog/hugo-on-gh-pages/</link>
      <pubDate>Mon, 22 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>http://swillops.com/blog/hugo-on-gh-pages/</guid>
      <description>&lt;p&gt;Traditional web hosting and web application frameworks have become a bit of an annoyance for me.  If you use Wordpress or Drupal you likely can sympathize with the never ending stream of updates and such.  Many of them actually make your site less stable.  Then there is the problem of keeping your site backed up in case your cheap hosting provider accidentally deletes all your work.  Well no more&amp;hellip;&lt;/p&gt;

&lt;p&gt;I am now managing the content of this website in static markdown files compiled with &lt;a href=&#34;http://gohugo.io/&#34;&gt;hugo&lt;/a&gt; and then hosted for free using &lt;a href=&#34;https://pages.github.com/&#34;&gt;gh-pages&lt;/a&gt;.  This is how I did it&amp;hellip;&lt;/p&gt;

&lt;p&gt;This is not a hugo tutorial, so I will assume you have built something in hugo and you have run &lt;code&gt;hugo server -w&lt;/code&gt; and can view the website locally.&lt;/p&gt;

&lt;p&gt;Your &lt;code&gt;config.toml&lt;/code&gt; file will probably look something like this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;baseurl = &amp;quot;http://&amp;lt;username&amp;gt;.github.io/&amp;lt;reponame&amp;gt;/&amp;quot;
languageCode = &amp;quot;en-us&amp;quot;
title = &amp;quot;Website Title&amp;quot;
theme = &amp;quot;your-theme&amp;quot;
canonifyurls = true
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now you are ready to start working with &lt;code&gt;gh-pages&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# create the git repository to track your actual website on gh-pages
$ cd public # or whatever your hugo &#39;publishdir&#39; is set to
$ git init # to create a git repo
$ git add .
$ git commit -am &amp;quot;initial publication of content&amp;quot;
$ git branch -m master gh-pages # rename master branch to gh-pages
# create a new repository on GitHub and then set it up as the remote for this repo
$ git remote add origin https://github.com/&amp;lt;username&amp;gt;/&amp;lt;reponame&amp;gt;.git
$ git push -u origin gh-pages

# now track the whole source in a different git repo
$ cd ..
$ git init
$ git add .
$ git commit -am &amp;quot;source of initial publication&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;At this point you should see your website at: &lt;code&gt;http://username.github.io/reponame/&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;BONUS POINTS:&lt;/strong&gt; If you want to use a custom domain name, you would do the following.&lt;/p&gt;

&lt;p&gt;Change your &lt;code&gt;baseUrl&lt;/code&gt; to the new domain.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# cd to parent git repo and modify your config.toml file to reflect the new baseUrl and run
$ hugo --baseUrl=&amp;quot;http://yourdomain.com&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now update the &lt;code&gt;public&lt;/code&gt; repo with this change.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ cd public
$ vim CNAME # you can use whatever editor you want
# add just the domain name to this file and save.  eg: yourdomain.com
$ git add .
$ git commit -am &amp;quot;added a CNAME and updated urls&amp;quot;
$ git push origin gh-pages
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then on you domain registrar (like godaddy.com) you would do the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Edit DNS settings&lt;/li&gt;
&lt;li&gt;If using a subdomain, create a &lt;code&gt;CNAME&lt;/code&gt; that points to &lt;code&gt;http://&amp;lt;username&amp;gt;.github.io/&amp;lt;reponame&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;If using a base domain, create an &lt;code&gt;A Record&lt;/code&gt; to either &lt;code&gt;192.30.252.153&lt;/code&gt; or &lt;code&gt;192.30.252.154&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now once the DNS has propagated you will be able to navigate to your domain and see your website.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>