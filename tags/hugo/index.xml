<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hugo on SwillOps</title>
    <link>http://swillops.com:1313/tags/hugo/</link>
    <description>Recent content in Hugo on SwillOps</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 30 Jun 2015 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://swillops.com:1313/tags/hugo/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Back to blogging</title>
      <link>http://swillops.com:1313/blog/back-to-blogging/</link>
      <pubDate>Tue, 30 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>http://swillops.com:1313/blog/back-to-blogging/</guid>
      <description>&lt;p&gt;As you can see from the recent inactivity on my blog, I have had a hard time publishing content recently.  It has not been for a lack blog worthy content, but how amazingly not fun blogging was on my old platform.  I spent a lot of time on my old website, making the theme perfect, adding all the features I thought I needed, etc&amp;hellip;  I used it quite a bit for a while, but the writing experience always felt strained.  It turns out that I hate WYSIWYG editors and would much prefer to just write my content in markdown files.  This led me the awesome &lt;a href=&#34;http://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; software which I am using now.  For more info on my current setup, check my &lt;a href=&#34;http://swillops.com:1313/blog/hugo-on-gh-pages&#34;&gt;Hugo on gh-pages&lt;/a&gt; post.&lt;/p&gt;

&lt;p&gt;As a developer there are a few places where I feel completely comfortable; a text editor (&lt;a href=&#34;http://www.sublimetext.com/&#34;&gt;Sublime Text&lt;/a&gt; in this case), the command line, and working with Git repositories.  It makes so much more sense to me to use tools I love for managing my content rather than some web UI which just does not feel right.&lt;/p&gt;

&lt;p&gt;Here are some of the benefits of a statically generated website:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Better security.&lt;/strong&gt;  Publishing only HTML, CSS and JS reduces the attack surface of your website giving you better security.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Better performance.&lt;/strong&gt;  Serving only static files reduces server load and increases performance.  Slow queries be gone.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Host your website anywhere.&lt;/strong&gt;  I am currently hosting my website for free on &lt;a href=&#34;https://pages.github.com/&#34;&gt;gh-pages&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;History of changes.&lt;/strong&gt;  By tracking everything in Git repositories you have a history of all your changes.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Never worry about backups.&lt;/strong&gt;  With everything in Git you never have to worry about backups again, its baked in.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Write in your favorite editor.&lt;/strong&gt;  Every developer has their favorite tools.  There is no place like &lt;code&gt;127.0.0.1&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Write content offline.&lt;/strong&gt;  All the source markdown files are local, so you can work offline easily.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Review before publishing.&lt;/strong&gt;  Use Hugo&amp;rsquo;s built in server to review your content locally before publishing.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;No WYSIWYG editor.&lt;/strong&gt;  This is such a quality of life improvement.  I love working in markdown in comparison.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;No security updates.&lt;/strong&gt;  I hated logging into Drupal or Wordpress and seeing a &amp;lsquo;security updates available&amp;rsquo; message.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So far this has been an enjoyable change and I am looking forward to discovering more benefits as I get deeper.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hugo on gh-pages</title>
      <link>http://swillops.com:1313/blog/hugo-on-gh-pages/</link>
      <pubDate>Mon, 22 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>http://swillops.com:1313/blog/hugo-on-gh-pages/</guid>
      <description>&lt;p&gt;Traditional web hosting and web application frameworks have become a bit of an annoyance for me.  If you use Wordpress or Drupal you likely can sympathize with the never ending stream of updates and such.  Many of them actually make your site less stable.  Then there is the problem of keeping your site backed up in case your cheap hosting provider accidentally deletes all your work.  Well no more&amp;hellip;&lt;/p&gt;

&lt;p&gt;I am now managing the content of this website in static markdown files compiled with &lt;a href=&#34;http://gohugo.io/&#34;&gt;hugo&lt;/a&gt; and then hosted for free using &lt;a href=&#34;https://pages.github.com/&#34;&gt;gh-pages&lt;/a&gt;.  This is how I did it&amp;hellip;&lt;/p&gt;

&lt;p&gt;This is not a hugo tutorial, so I will assume you have built something in hugo and you have run &lt;code&gt;hugo server -w&lt;/code&gt; and can view the website locally.&lt;/p&gt;

&lt;p&gt;Your &lt;code&gt;config.toml&lt;/code&gt; file will probably look something like this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;baseurl = &amp;quot;http://&amp;lt;username&amp;gt;.github.io/&amp;lt;reponame&amp;gt;/&amp;quot;
languageCode = &amp;quot;en-us&amp;quot;
title = &amp;quot;Website Title&amp;quot;
theme = &amp;quot;your-theme&amp;quot;
canonifyurls = true
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now you are ready to start working with &lt;code&gt;gh-pages&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# create the git repository to track your actual website on gh-pages
$ cd public # or whatever your hugo &#39;publishdir&#39; is set to
$ git init # to create a git repo
$ git add .
$ git commit -am &amp;quot;initial publication of content&amp;quot;
$ git branch -m master gh-pages # rename master branch to gh-pages
# create a new repository on GitHub and then set it up as the remote for this repo
$ git remote add origin https://github.com/&amp;lt;username&amp;gt;/&amp;lt;reponame&amp;gt;.git
$ git push -u origin gh-pages

# now track the whole source in a different git repo
$ cd ..
$ git init
$ git add .
$ git commit -am &amp;quot;source of initial publication&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;At this point you should see your website at: &lt;code&gt;http://username.github.io/reponame/&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;BONUS POINTS:&lt;/strong&gt; If you want to use a custom domain name, you would do the following.&lt;/p&gt;

&lt;p&gt;Change your &lt;code&gt;baseUrl&lt;/code&gt; to the new domain.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# cd to parent git repo and modify your config.toml file to reflect the new baseUrl and run
$ hugo --baseUrl=&amp;quot;http://yourdomain.com&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now update the &lt;code&gt;public&lt;/code&gt; repo with this change.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ cd public
$ vim CNAME # you can use whatever editor you want
# add just the domain name to this file and save.  eg: yourdomain.com
$ git add .
$ git commit -am &amp;quot;added a CNAME and updated urls&amp;quot;
$ git push origin gh-pages
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then on your domain registrar (like godaddy.com) you would do the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Edit DNS settings&lt;/li&gt;
&lt;li&gt;If using a subdomain, create a &lt;code&gt;CNAME&lt;/code&gt; that points to &lt;code&gt;http://&amp;lt;username&amp;gt;.github.io/&amp;lt;reponame&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;If using a base domain, create an &lt;code&gt;A Record&lt;/code&gt; to either &lt;code&gt;192.30.252.153&lt;/code&gt; or &lt;code&gt;192.30.252.154&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now once the DNS has propagated you will be able to navigate to your domain and see your website.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>