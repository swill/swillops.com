<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mysql on SwillOps</title>
    <link>http://swillops.com/tags/mysql/</link>
    <description>Recent content in Mysql on SwillOps</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 19 May 2010 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://swillops.com/tags/mysql/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Apache, MySQL and PHP on Snow Leopard</title>
      <link>http://swillops.com/blog/apache-mysql-and-php-snow-leopard/</link>
      <pubDate>Wed, 19 May 2010 00:00:00 +0000</pubDate>
      
      <guid>http://swillops.com/blog/apache-mysql-and-php-snow-leopard/</guid>
      <description>&lt;p&gt;Snow Leopard comes with PHP 5.3 installed by default. Since I do a lot of
Drupal development, I can&amp;rsquo;t actually use that version of PHP and I needed to
downgrade to PHP 5.2.x. I personally do not like the way that Apple has setup
their AMP stack, so this is how I was able to get an acceptable one setup.&lt;/p&gt;

&lt;p&gt;Note: This method uses MacPorts, so you will need to install that first.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo port clean php52&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;sudo port -f uninstall installed&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;sudo port installed&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;sudo port install grep&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;sudo port install apache2&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;sudo port install mysql5-server&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;sudo port install php52 +apache2 +mysql5&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Setting up a new UTF8 MySQL Database</title>
      <link>http://swillops.com/blog/setting-new-utf8-mysql-database/</link>
      <pubDate>Wed, 20 Jan 2010 00:00:00 +0000</pubDate>
      
      <guid>http://swillops.com/blog/setting-new-utf8-mysql-database/</guid>
      <description>&lt;p&gt;Create a UTF8 database:&lt;br /&gt;
&lt;code&gt;&amp;gt; CREATE DATABASE db_name DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Create a user for the database:&lt;br /&gt;
&lt;code&gt;&amp;gt; CREATE USER &#39;user_name&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;user_pass&#39;;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Grant all privileges to the user:&lt;br /&gt;
&lt;code&gt;&amp;gt; GRANT ALL PRIVILEGES ON *.* TO &#39;user_name&#39;@&#39;localhost&#39; WITH GRANT OPTION;&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;&amp;gt; FLUSH PRIVILEGES;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;You should probably not give him all privileges on all databases, but you can
change that as needed.&lt;/p&gt;

&lt;p&gt;If for some reason the IDENTIFIED BY clause did not work (you probably uses
&amp;lsquo;%&amp;rsquo; instead of &amp;lsquo;localhost&amp;rsquo;), then do the following to fix that users password.&lt;br /&gt;
&lt;code&gt;# mysql -u root -p&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;&amp;gt; use mysql;&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;&amp;gt; UPDATE user SET Password = PASSWORD(&#39;new_pass&#39;) WHERE User = &#39;user_name&#39;;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Thats it. Enjoy&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Installing Django with Satchmo on Debian Etch</title>
      <link>http://swillops.com/blog/installing-django-satchmo-debian-etch/</link>
      <pubDate>Thu, 11 Sep 2008 00:00:00 +0000</pubDate>
      
      <guid>http://swillops.com/blog/installing-django-satchmo-debian-etch/</guid>
      <description>&lt;p&gt;This is how I got Django and Satchmo set up on my Debian Etch box with
Apache2, MySQL, mod_python and Memcached.&lt;/p&gt;

&lt;p&gt;The machine I started with had Debian Etch installed as well as Apache2 and
MySQL.&lt;/p&gt;

&lt;p&gt;Note: I am assuming you are working as root on your machine. If not you will
have to do &lt;code&gt;sudo&lt;/code&gt; in front of all of the following commands.&lt;/p&gt;

&lt;p&gt;Make sure that your &lt;code&gt;/etc/apt/sources.list&lt;/code&gt; is up to date and then update your
repositories and installed packages. I usually get my &lt;a href=&#34;http://www.linuxquestions.org/questions/debian-26/post-your-
source.list-330913/&#34;&gt;sources from
here&lt;/a&gt;&amp;hellip;&lt;br /&gt;
&lt;code&gt;# apt-get update&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# apt-get upgrade&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Since it is a new server and my &lt;code&gt;locales&lt;/code&gt; are not right, I reconfigure them.&lt;br /&gt;
&lt;code&gt;# dpkg-reconfigure locales&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Install GCC, G++ and Make so you can compile code&lt;br /&gt;
&lt;code&gt;# apt-get install gcc g++ make&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Install the newest version of
&lt;a href=&#34;http://www.python.org/download/releases/&#34;&gt;Python&lt;/a&gt;
(&lt;a href=&#34;http://www.python.org/ftp/python/2.5.2/Python-2.5.2.tgz&#34;&gt;2.5.2&lt;/a&gt; as of this
writing).&lt;br /&gt;
&lt;code&gt;# cd ~/&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# wget http://www.python.org/ftp/python/2.5.2/Python-2.5.2.tgz&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# tar -zxvf Python*&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# cd Python*&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# ./configure --enable-shared&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# make&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# make install&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Set up a config file for python.&lt;br /&gt;
&lt;code&gt;# vi /etc/ld.so.conf.d/python2.5.conf&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Put the following in it (path to the libpython2.5.so.1.0):&lt;br /&gt;
&lt;code&gt;/usr/local/lib&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Make the settings take effect.&lt;br /&gt;
&lt;code&gt;# ldconfig&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Make this version of python the default version.&lt;br /&gt;
&lt;code&gt;# vi /usr/share/python/debian_defaults&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Change the contents of this file to:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;[DEFAULT]
# the default python version  
default-version = python2.5

# all supported python versions  
supported-versions = python2.4, python2.5

# formerly supported python versions  
old-versions = python2.3

# unsupported versions, including older versions  
unsupported-versions = python2.3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Create a symlink to point to the new version of python.&lt;br /&gt;
&lt;code&gt;# rm /usr/bin/python&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# ln -s /usr/local/bin/python2.5 /usr/bin/python&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Set up MySQL (&lt;a href=&#34;http://sourceforge.net/projects/mysql-python&#34;&gt;MySQL-python&lt;/a&gt;) to
work with Python.&lt;br /&gt;
&lt;code&gt;# apt-get install libmysqlclient15-dev&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# cd ~/&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# wget http://voxel.dl.sourceforge.net/sourceforge/mysql-python/MySQL-
python-1.2.2.tar.gz&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# tar -zxvf MySQL-python*&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# cd MySQL-python*&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# python setup.py build&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# python setup.py install&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Installing &lt;code&gt;mod_python&lt;/code&gt; for Apache2 in Debian Etch is a total PITA. Here are
the steps I took to get it installed&amp;hellip;&lt;br /&gt;
&lt;code&gt;# apt-get install apache2-prefork-dev&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# cd ~/&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# wget http://ftp.wayne.edu/apache/httpd/modpython/mod_python-3.3.1.tgz&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# tar -zxvf mod_python*&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# cd mod_python*&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# ./configure --with-apxs=/usr/bin/apxs2 --with-
python=/usr/local/bin/python2.5&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# make&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# make install&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Install the newest version of &lt;a href=&#34;http://www.djangoproject.com/&#34;&gt;Django&lt;/a&gt; (1.0 as
of this writing).&lt;br /&gt;
&lt;code&gt;# cd ~/&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# wget http://www.djangoproject.com/download/1.0/tarball/&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# tar -zxvf Django*&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# cd Django*&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# python setup.py install&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;On my machine, this installed Django into &lt;code&gt;/usr/local/lib/python2.5/site-
packages&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Set up your Django project.&lt;br /&gt;
&lt;code&gt;# cd ~/&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# django-admin.py startproject mysite&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Set up your MySQL database. Since my machine is a fresh install I need to set
up a password first.&lt;br /&gt;
&lt;code&gt;# mysqladmin -u root password PASSWORD&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# mysql -u root -p&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;mysql&amp;gt; CREATE DATABASE mysite CHARACTER SET utf8;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Set up your project settings in &lt;code&gt;settings.py&lt;/code&gt;.&lt;br /&gt;
* Enter up your admin information.&lt;br /&gt;
* Enter up your &lt;a href=&#34;http://docs.djangoproject.com/en/dev/ref/databases/#ref-databases&#34;&gt;database connection info&lt;/a&gt;.&lt;br /&gt;
* Change your timezone and language settings if needed.&lt;/p&gt;

&lt;p&gt;Sync your installed apps and your database.&lt;br /&gt;
&lt;code&gt;# cd ~/mysite&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# python manage.py syncdb&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Check this &lt;a href=&#34;http://docs.djangoproject.com/en/dev/howto/deployment/modpython
/#howto-deployment-modpython&#34;&gt;Django
documentation&lt;/a&gt; page for how to set up &lt;code&gt;mod_python&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;You need to set up a directory where mod_python can extract eggs and you need
to set up the permissions so it can write to it (don&amp;rsquo;t use 777 as in my
example in production).&lt;br /&gt;
&lt;code&gt;# cd ~/mysite&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# mkdir cache_directory&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# chmod 777 cache_directory&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# chown www-data cache_directory&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now set up a config file to import those settings.&lt;br /&gt;
&lt;code&gt;# vi cache_file.py&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Put the following lines in that file:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import os
os.environ[&#39;PYTHON_EGG_CACHE&#39;] = &#39;/absolute/path/to/cache_directory&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Configure &lt;code&gt;mod_python&lt;/code&gt; to work with Apache2.&lt;br /&gt;
&lt;code&gt;# vi /etc/apache2/httpd.conf&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Add the following lines to that file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;LoadModule python_module /usr/lib/apache2/modules/mod_python.so
PythonInterpreter mysite
PythonImport /absolute/path/to/cache_file.py mysite
&amp;lt;Location &amp;quot;/&amp;quot;&amp;gt;
  SetHandler python-program
  PythonHandler django.core.handlers.modpython
  SetEnv DJANGO_SETTINGS_MODULE mysite.settings
  PythonOption django.root /mysite
  PythonDebug On
  PythonPath &amp;quot;[&#39;/path/to/project&#39;] + sys.path&amp;quot;
&amp;lt;/Location&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Restart Apache.&lt;br /&gt;
&lt;code&gt;# /etc/init.d/apache2 restart&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;At this point you should have a working Django install and you should be able
to start adding apps&amp;hellip;&lt;/p&gt;

&lt;p&gt;Now lets get our install ready for Satchmo. We will need to install a bunch of
things, as laid out &lt;a href=&#34;http://www.satchmoproject.com/docs/rel/0.7/requirements.html&#34;&gt;on this
page&lt;/a&gt;&amp;hellip;&lt;/p&gt;

&lt;p&gt;Install &lt;a href=&#34;http://www.pythonware.com/products/pil/&#34;&gt;Python Imaging Library&lt;/a&gt;&amp;hellip;&lt;br /&gt;
&lt;code&gt;# cd ~/&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# wget http://effbot.org/downloads/Imaging-1.1.6.tar.gz&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# tar -zxvf Imaging*&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# cd Imaging*&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# python setup.py install&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Install &lt;a href=&#34;http://www.amk.ca/python/code/crypto&#34;&gt;Python cryptography&lt;/a&gt; toolkit&amp;hellip;&lt;br /&gt;
&lt;code&gt;# cd ~/&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# wget http://www.amk.ca/files/python/crypto/pycrypto-2.0.1.tar.gz&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# tar -zxvf pycrypto*&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# cd pycrypto*&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# python setup.py install&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Install &lt;a href=&#34;http://www.reportlab.org/&#34;&gt;ReportLab&lt;/a&gt;&amp;hellip;&lt;br /&gt;
&lt;code&gt;# apt-get install libfreetype6 libfreetype6-dev&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# cd ~/&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# wget http://www.reportlab.org/ftp/ReportLab_2_2.tgz&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# tar -zxvf ReportLab*&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# cd ReportLab*&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# python setup.py install&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Install &lt;a href=&#34;http://tinyforge.org/frs/download.php/1/trml2pdf.tar.gz&#34;&gt;Tiny
RML2PDF&lt;/a&gt;&amp;hellip;&lt;br /&gt;
&lt;code&gt;# cd ~/&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# wget http://tinyforge.org/frs/download.php/1/trml2pdf.tar.gz&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# tar -zxvf trml2pdf*&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# cd trml2pdf*&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# mv trml2pdf /usr/local/lib/python2.5/site-packages&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# python&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; import trml2pdf&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Install &lt;a href=&#34;http://code.google.com/p/django-comment-
utils/&#34;&gt;django-comment-utils&lt;/a&gt;&amp;hellip;&lt;br /&gt;
&lt;code&gt;# cd ~/&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# wget http://django-comment-
utils.googlecode.com/files/comment_utils-0.3p1.tar.gz&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# tar -zxvf comment_utils*&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# cd comment_utils*&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# python setup.py install&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Install &lt;a href=&#34;http://code.google.com/p/django-
registration/&#34;&gt;Django Registration&lt;/a&gt;&amp;hellip;&lt;br /&gt;
&lt;code&gt;# cd ~/&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# wget http://django-registration.googlecode.com/files/django-
registration-0.6.tar.gz&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# tar -zxvf django-registration*&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# cd django-registration*&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# python setup.py install&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Install &lt;a href=&#34;http://www.danga.com/memcached/&#34;&gt;Memcached&lt;/a&gt; for
&lt;a href=&#34;http://docs.djangoproject.com/en/dev/topics/cache/&#34;&gt;caching&lt;/a&gt; (including its
dependencies and python bindings)&amp;hellip;&lt;br /&gt;
&lt;code&gt;# cd ~/&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# wget http://www.monkey.org/~provos/libevent-1.4.8-stable.tar.gz&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# tar -zxvf libevent*&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# cd libevent*&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# ./configure&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# make&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# make install&lt;/code&gt;&lt;br /&gt;
Create a link so the memcached knows where to find the library&amp;hellip;&lt;br /&gt;
&lt;code&gt;# ln -s /usr/local/lib/libevent-1.4.so.2 /lib/libevent-1.4.so.2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;# cd ~/&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# wget http://danga.com/memcached/dist/memcached-1.2.6.tar.gz&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# tar -zxvf memcached*&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# cd memcached*&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# ./configure&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# make&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# make install&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;# cd ~/&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# wget ftp://ftp.tummy.com/pub/python-memcached/python-memcached-
latest.tar.gz&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# tar -zxvf python-memcached*&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# cd python-memcached*&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# python setup.py install&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Start the memcached daemon&amp;hellip;&lt;br /&gt;
&lt;code&gt;# memcached -d -u www-data -m 32 127.0.0.1 -p 11211&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Configure your django project to use memcached&amp;hellip;&lt;br /&gt;
&lt;code&gt;# cd ~/mysite&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# vi settings.py&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;In that file add:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;CACHE_BACKEND = &#39;memcached://127.0.0.1:11211/&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Install &lt;a href=&#34;http://pyyaml.org/&#34;&gt;PyYaml&lt;/a&gt;&amp;hellip;&lt;br /&gt;
&lt;code&gt;# cd ~/&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# wget http://pyyaml.org/download/pyyaml/PyYAML-3.05.tar.gz&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# tar -zxvf PyYAML*&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# cd PyYAML*&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# python setup.py install&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Install &lt;a href=&#34;http://docutils.sourceforge.net/&#34;&gt;Docutils&lt;/a&gt;&amp;hellip;&lt;br /&gt;
&lt;code&gt;# cd ~/&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# wget http://docutils.sf.net/docutils-snapshot.tgz&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# tar -zxvf docutils-snapshot*&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# cd docutils*&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# python setup.py install&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Install &lt;a href=&#34;http://gosatchmo.com/apps/django-threaded-
multihost/&#34;&gt;Django Threaded Multihost&lt;/a&gt;&amp;hellip;&lt;br /&gt;
&lt;code&gt;# cd ~/&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# wget http://gosatchmo.com/static/files/threaded-multihost-1.1-source.tgz&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# tar -zxvf threaded-multihost*&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# cd django-threaded-multihost&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# python setup.py install&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now you have all the prerequisites installed for Satchmo&amp;hellip;&lt;br /&gt;
Its time to install &lt;a href=&#34;http://www.satchmoproject.com/&#34;&gt;Satchmo&lt;/a&gt;&amp;hellip;&lt;br /&gt;
&lt;code&gt;# apt-get install subversion&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# cd ~/&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# svn co svn://satchmoproject.com/satchmo/trunk&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# cd trunk&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# python setup.py install&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Check it&amp;hellip;&lt;br /&gt;
&lt;code&gt;# cd ~/&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# python&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; import django&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; import satchmo&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If they both import fine, then you are all set&amp;hellip; Enjoy&amp;hellip;&lt;/p&gt;

&lt;p&gt;To finish configuring your store &lt;a href=&#34;http://www.satchmoproject.com/docs/svn/new_installation.html&#34;&gt;check this
page&lt;/a&gt;&amp;hellip;&lt;/p&gt;

&lt;p&gt;I like to have a clean machine, so I remove all of the source files after
installs&amp;hellip;&lt;br /&gt;
&lt;code&gt;# cd ~/&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# rm -rf Python* MySQL-python* mod_python* Django* Imaging* pycrypto*
ReportLab* trml2pdf* comment_utils* django-registration* libevent* memcached*
python-memcached* PyYAML* docutils* trunk* django-threaded-multihost threaded-
multihost*&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Debian Rails Stack - NginX and Mongrel</title>
      <link>http://swillops.com/blog/debian-rails-stack-nginx-and-mongrel/</link>
      <pubDate>Wed, 09 Jul 2008 00:00:00 +0000</pubDate>
      
      <guid>http://swillops.com/blog/debian-rails-stack-nginx-and-mongrel/</guid>
      <description>&lt;p&gt;If you are reading this it is because you already know that you want a Rails
setup on a Debian server with &lt;a href=&#34;http://wiki.codemongers.com/Main&#34;&gt;NginX&lt;/a&gt; in
front of a &lt;a href=&#34;http://mongrel.rubyforge.org/wiki/MongrelCluster&#34;&gt;Mongrel
Cluster&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;These are the steps I used to completely set up my server&amp;hellip;&lt;/p&gt;

&lt;p&gt;The machine I started with had an existing Debian install and also had Apache2
and MySQL installed.&lt;/p&gt;

&lt;p&gt;Note: I am assuming you are working as root on your machine. If not you will
have to do &lt;code&gt;sudo&lt;/code&gt; in front of all of the following commands.&lt;/p&gt;

&lt;p&gt;Make sure that your &lt;code&gt;/etc/apt/sources.list&lt;/code&gt; is up to date and then update your
repositories and installed packages.&lt;br /&gt;
&lt;code&gt;# apt-get update&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# apt-get upgrade&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Remove all Apache instances&lt;br /&gt;
&lt;code&gt;# dpkg --purge apache apache2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Install Ruby and its friends&lt;br /&gt;
&lt;code&gt;# apt-get install ruby1.8-dev ruby1.8 ri1.8 rdoc1.8 irb1.8 libreadline-
ruby1.8 libruby1.8&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;I am also using SSL, so I need to install the ruby ssl libraries.&lt;br /&gt;
&lt;code&gt;# apt-get install libopenssl-ruby libopenssl-ruby1.8&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Setup symlinks for Ruby and its friends&lt;br /&gt;
&lt;code&gt;# ln -s /usr/bin/ruby1.8 /usr/local/bin/ruby&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# ln -s /usr/bin/ri1.8 /usr/local/bin/ri&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# ln -s /usr/bin/rdoc1.8 /usr/local/bin/rdoc&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# ln -s /usr/bin/irb1.8 /usr/local/bin/irb&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Install GCC, G++ and Make so you can compile code&lt;br /&gt;
&lt;code&gt;# apt-get install gcc g++ make&lt;/code&gt;``&lt;/p&gt;

&lt;p&gt;Get the most recent version of RubyGems (&lt;a href=&#34;http://rubyforge.org/frs/?group_id=126&#34;&gt;check for current
version&lt;/a&gt;)&lt;br /&gt;
&lt;code&gt;# wget http://rubyforge.org/frs/download.php/38646/rubygems-1.2.0.tgz&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# tar xvzf rubygems*&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# cd rubygems*&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# ruby setup.rb&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;I cleaned up the install files after the install&lt;br /&gt;
&lt;code&gt;# cd ..&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# rm -rf rubygems-1.2.0 rubygems-1.2.0.tgz&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Set up a symlink for the Gem command&lt;br /&gt;
&lt;code&gt;# ln -s /usr/bin/gem1.8 /usr/local/bin/gem&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now we need to install &lt;a href=&#34;http://www.rubyonrails.org/&#34;&gt;Rails&lt;/a&gt; in all its glory&lt;br /&gt;
&lt;code&gt;# gem install rails --include-dependencies&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;I use &lt;a href=&#34;http://git.or.cz/&#34;&gt;Git&lt;/a&gt; for source code management, so I need to
install it. I also use submodules and the code in Debian&amp;rsquo;s repository does not
support it, so I need to install it from source.&lt;/p&gt;

&lt;p&gt;In order to make sure that Git will actually make, we have to do a little
setup work.&lt;br /&gt;
&lt;code&gt;# apt-get install tcl8.4 tk8.4&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now lets get the &lt;a href=&#34;http://git.or.cz/&#34;&gt;latest version&lt;/a&gt; of Git and install it&lt;br /&gt;
&lt;code&gt;# cd ~/&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# wget http://kernel.org/pub/software/scm/git/git-1.5.6.2.tar.gz&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# tar xzf git*&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# cd git*&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# ./configure&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# make&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# make install&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;I cleaned up the install files after the install&lt;br /&gt;
&lt;code&gt;# cd ..&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# rm -rf git-1.5.6.2 git-1.5.6.2.tar.gz&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;I also want to make sure that I have all of the dependencies&lt;br /&gt;
&lt;code&gt;# apt-get build-dep git-core&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;I also wanted to have image libraries at my finger tips when I wanted them, so
I installed &lt;a href=&#34;http://www.imagemagick.org/script/index.php&#34;&gt;ImageMagick&lt;/a&gt; and
&lt;a href=&#34;http://rmagick.rubyforge.org/&#34;&gt;RMagick&lt;/a&gt;&lt;br /&gt;
&lt;code&gt;# apt-get install imagemagick librmagick-ruby1.8 librmagick-ruby-doc
libfreetype6-dev xml-core&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Next we are going to install &lt;a href=&#34;http://mongrel.rubyforge.org/&#34;&gt;Mongrel&lt;/a&gt;&lt;br /&gt;
&lt;code&gt;# gem install mongrel&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;And then &lt;a href=&#34;http://mongrel.rubyforge.org/wiki/MongrelCluster&#34;&gt;Mongrel Cluster&lt;/a&gt;&lt;br /&gt;
&lt;code&gt;# gem install mongrel_cluster&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Get the machine ready for the &lt;a href=&#34;http://wiki.codemongers.com/Main&#34;&gt;NginX&lt;/a&gt;
install&lt;br /&gt;
&lt;code&gt;# apt-get install zlib1g-dev libgcrypt11-dev libpcre3-dev libssl-dev&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Install NginX and friends&lt;br /&gt;
&lt;code&gt;# apt-get install libpcre3 nginx libfcgi-dev libfcgi-ruby1.8&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;It is worth noting here that I am using
&lt;a href=&#34;http://www.parallels.com/en/virtuozzo/&#34;&gt;Virtuozzo&lt;/a&gt;. At this point I cloned my
machine and will be doing the Mongrel and Rails specific configuration on my
cloned machine for easy Rails deployment.&lt;/p&gt;

&lt;p&gt;I now need to get my Rails source code on my machine. Since I am using
&lt;a href=&#34;https://github.com/&#34;&gt;github&lt;/a&gt;, I need to set up my server and github so they
can talk to each other. This is done through an ssh key. The ssh keys reside
in &lt;code&gt;~/.ssh/&lt;/code&gt;. If you do not have that directory, simply ssh from that machine
into another machine and when it asks, add the machine as a &lt;code&gt;know_hosts&lt;/code&gt; and
it will create the directory for you.&lt;br /&gt;
&lt;code&gt;# cd ~/.ssh/&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# ls&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you already have &lt;code&gt;id_rsa.pub&lt;/code&gt; and &lt;code&gt;id_rsa&lt;/code&gt; in that directory, skip this
step, otherwise create that key.&lt;br /&gt;
&lt;code&gt;# ssh-keygen -t rsa&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Follow the instructions on screen (&lt;code&gt;,&lt;/code&gt;, ``).&lt;/p&gt;

&lt;p&gt;Now log into github and under &amp;lsquo;account&amp;rsquo;, copy in the result of the following
command into the Public Keys section (make sure not to have any new line
characters when you copy and paste).&lt;br /&gt;
&lt;code&gt;# cat id_rsa.pub&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now that my server and github can talk to each other, I am going to create a
directory for my &lt;code&gt;projects&lt;/code&gt; and move into it.&lt;br /&gt;
&lt;code&gt;# mkdir ~/projects&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# cd ~/projects/&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now that I have github setup with my machine I need to grab my code.&lt;br /&gt;
&lt;code&gt;# git clone git@github.com:my_username/myproject.git&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Configure your Rails app now. Stuff like setting up your database and
configuring Rails to work with them&amp;hellip; (&lt;code&gt;config/database.yml&lt;/code&gt;, etc&amp;hellip;)&lt;br /&gt;
Note: Since you are using Debian, you may have to specify the socket in
config/database.yml to be: &lt;code&gt;socket: /var/run/mysqld/mysqld.sock&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now that my Rails app is configured, I need to configure the server
environment. First I am going to configure Mongrel Cluster.&lt;br /&gt;
&lt;code&gt;# cp
/usr/lib/ruby/gems/1.8/gems/mongrel_cluster-1.0.5/resources/mongrel_cluster
/etc/init.d/mongrel_cluster&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# vi /etc/init.d/mongrel_cluster&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Add the following just above the CONF_DIR variable.&lt;br /&gt;
&lt;code&gt;PATH=/sbin:/bin:/usr/sbin:/usr/bin:/usr/local:/usr/local/sbin:/usr/local/bin&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;I also changed the user to:&lt;br /&gt;
&lt;code&gt;USER=www-data&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Set up Mongrel Cluster to start at startup.&lt;br /&gt;
&lt;code&gt;# chmod +x /etc/init.d/mongrel_cluster&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# update-rc.d mongrel_cluster defaults&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now I need to set up the Mongrel Cluster correctly.&lt;br /&gt;
&lt;code&gt;# mongrel_rails cluster::configure -e production -p 8000 -N 3 -c
~/projects/myproject -a 127.0.0.1 --user www-data --group www-data&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;It should create a config file that looks like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;\--- 
cwd: /root/projects/myproject
port: 8000
environment: production
group: www-data
user: www-data
address: 127.0.0.1
pid_file: log/mongrel.pid
servers: 3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Putting the config for Mongrel Cluster in /etc like the rest of the config
files.&lt;br /&gt;
&lt;code&gt;# mkdir /etc/mongrel_cluster&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# cd /etc/mongrel_cluster/&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# ln -s ~/projects/myproject/config/mongrel_cluster.yml&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now the last thing we need to do is configure NginX. I have attached a sample
config file that handles one rails app and phpmyadmin. Back up your current
config (&lt;code&gt;/etc/nginx/nginx.conf&lt;/code&gt;) file before you mess with it.&lt;/p&gt;

&lt;p&gt;Make sure that you change the ownership of your Rails app to www-data so it
will run.&lt;br /&gt;
&lt;code&gt;# chown -R www-data:www-data ~/projects/myproject&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;As a final set to make sure that everything is working, you need to restart
everything.&lt;br /&gt;
&lt;code&gt;# /etc/init.d/mongrel_cluster stop&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# /etc/init.d/mongrel_cluster start&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# /etc/init.d/nginx stop&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# /etc/init.d/nginx start&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Notes:&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;1.&lt;/strong&gt;&lt;br /&gt;
On my machine I was having problems with locales being wrong. Basically I was
getting this problem every time I did &amp;lsquo;apt-get install&amp;rsquo;.&lt;br /&gt;
&lt;code&gt;perl: warning: Setting locale failed.&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;perl: warning: Please check that your locale settings:&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;LANGUAGE = (unset),&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;LC_ALL = (unset),&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;LANG = &amp;quot;en_CA.UTF-8&amp;quot;&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;are supported and installed on your system.&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;perl: warning: Falling back to the standard locale (&amp;quot;C&amp;quot;).&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;In order to solve this on my machine I did the following and then followed the
on screen instructions.&lt;br /&gt;
&lt;code&gt;# dpkg-reconfigure locales&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt;&lt;br /&gt;
My system already had MySQL installed, but in my production.log file I was
getting warnings that I was using the built in Rails MySQL something-or-other
and that it was not safe to be used in production. They wanted you to install
the MySQL C Ruby Bindings. This is how I was able to do it (ignore the NginX
error it gives at the end and just restart NginX after).&lt;br /&gt;
&lt;code&gt;# apt-get install libmysqlclient15-dev&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;# gem install mysql -- --with-mysql-config=/usr/bin/mysql_config&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Resources:&lt;/strong&gt;&lt;br /&gt;
* &lt;a href=&#34;http://www.rubynaut.net/articles/2007/09/23/nginx-and-mongrel-cluster-on-debian&#34;&gt;Nginx and Mongrel cluster on debian&lt;/a&gt;&lt;br /&gt;
* &lt;a href=&#34;http://rubyjudo.com/2006/8/27/nginx-yet-another-rails-deployment-option&#34;&gt;nginx, Yet Another Rails Deployment Option&lt;/a&gt;&lt;br /&gt;
* &lt;a href=&#34;http://brainspl.at/rails_stack.html&#34;&gt;The Perfect Rails/Debian/Lighttpd Stack&amp;hellip;&lt;/a&gt;&lt;br /&gt;
* &lt;a href=&#34;http://blog.7thcross.com/?p=20&#34;&gt;Git repo failing on submodule in debian&lt;/a&gt;&lt;br /&gt;
* &lt;a href=&#34;http://www.urbanpuddle.com/articles/2008/04/28/install-ruby-on-rails-hardy-heron&#34;&gt;Install Ruby on Rails on Ubuntu Hardy Heron 8.04&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Attachement: &lt;a href=&#34;http://www.swillops.com/files/nginx.conf&#34;&gt;nginx.conf&lt;/a&gt; 2.69 KB&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>MySQL on a Mac: What a headache</title>
      <link>http://swillops.com/blog/mysql-mac-what-headache/</link>
      <pubDate>Fri, 13 Jun 2008 00:00:00 +0000</pubDate>
      
      <guid>http://swillops.com/blog/mysql-mac-what-headache/</guid>
      <description>&lt;p&gt;I have spent a stupid amount of time trying to get MySQL
installed/configured/working on my Mac. Since I am coming from Ubuntu, I am
used to being able to install an entire LAMPs stack with this one command:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$ sudo apt-get install apache2 mysql-server php5 libapache2-mod-php5 php5-xsl
php5-gd php-pear libapache2-mod-auth-mysql php5-mysql&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Apparently on a Mac this is a complete PITA.&lt;/p&gt;

&lt;p&gt;After spending hours installing and uninstalling MySQL with the final result
being the dreaded error:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Starting mysqld daemon with databases from /usr/local/mysql/data&lt;br /&gt;
STOPPING server from pid file /usr/local/mysql/data/will-stevenss-macbook-
pro.local.pid&lt;br /&gt;
080613 11:18:38 mysqld ended&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I finally ran into &lt;a href=&#34;http://2tbsp.com/content/install_and_configure_mysql_5_macports&#34;&gt;this
article&lt;/a&gt;
which has finally gotten me totally set up. Thanks Guys&amp;hellip;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Notes:&lt;/strong&gt;&lt;br /&gt;
Since you can have multiple MySQL installs (4 and 5) with Macports; when you
issue commands such as &amp;lsquo;mysql&amp;rsquo;, you need to specify the version, so you would
use &amp;lsquo;mysql5&amp;rsquo;.&lt;/p&gt;

&lt;p&gt;The command that is specified for starting the MySQL server at startup did not
work for me because it was the wrong path. Here is the command I used:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo launchctl load -w /Library/LaunchDaemons/org.macports.mysql5.plist&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>